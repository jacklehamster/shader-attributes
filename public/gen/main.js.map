{"version":3,"file":"main.js","mappings":"mBAKAA,WAAWC,QAJK,CACZC,mBCFW,YAA+BC,GAC1C,MAAMC,EAAY,GAWlB,OAVAD,EAAQE,SAASC,IACb,IAAIC,EACJ,MAAMC,EACiE,QADvDD,EAAKD,EAChBG,MAAM,8DAA2E,IAAPF,OAAgB,EAASA,EAAGG,KAAKC,GAASA,EAAKF,MAAM,0DACpIL,EAAUQ,SAASJ,QAAuCA,EAAS,IAC9DK,QAAQC,KAAQA,IAChBJ,KAAI,EAAE,CAAEC,EAAMI,EAAeC,EAAUC,MACjC,CAAEN,OAAMI,gBAAeC,WAAUC,WACzC,IAEAb,CACX,E","sources":["webpack://@dobuki/shader-attributes/./src/index.ts","webpack://@dobuki/shader-attributes/./src/shader-utils.ts"],"sourcesContent":["import getShaderVariables from \"./shader-utils\";\nconst exports = {\n    getShaderVariables,\n};\nexport default exports;\nglobalThis.exports = exports;\n","export default function getShaderVariables(...shaders) {\n    const variables = [];\n    shaders.forEach((shader) => {\n        var _a;\n        const groups = (_a = shader\n            .match(/\\n(in|attribute|uniform) ([\\w]+) ([\\w]+)(\\[.+\\])?;/g)) === null || _a === void 0 ? void 0 : _a.map((line) => line.match(/\\n((in|attribute|uniform) ([\\w]+) ([\\w]+)(\\[.+\\])?;)/));\n        variables.push(...(groups !== null && groups !== void 0 ? groups : [])\n            .filter((a) => !!a)\n            .map(([, line, attributeType, dataType, name]) => {\n            return { line, attributeType, dataType, name };\n        }));\n    });\n    return variables;\n}\n"],"names":["globalThis","exports","getShaderVariables","shaders","variables","forEach","shader","_a","groups","match","map","line","push","filter","a","attributeType","dataType","name"],"sourceRoot":""}